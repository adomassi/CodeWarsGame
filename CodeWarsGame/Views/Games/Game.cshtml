@using CodeWarsGame.Repositories
@model CodeWarsGame.Models.Player

@{
    ViewBag.Title = "Codewars Game";
}

<h2>Code wars game</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PlayerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlayerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlayerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Task", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("selectedTaskId", new TasksRepository().GetTasksList(), "--Select a task from the list--", new { @class = "form-control-static", @style = "width:211px;", @data_val = "true", @data_val_required = "Please select task!" })
                @Html.ValidationMessage("selectedTaskId", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Solution", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("textAnswer", null, new { @rows = 10, @cols = 25, @id = "textAnswer", @class = "form-control valid", @data_val = "true", @placeholder = "Type code in C#...", @data_val_required = "Please input solution in c# language !" })
                @Html.ValidationMessage("textAnswer", new { @class = "text-danger" })

                @if (ViewBag.SuccessMessage != null)
                {
                    <p class="text-success">@ViewBag.SuccessMessage</p>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
                @Html.ActionLink("HiScores", "HiScores", null, new { @class = "btn btn-default" })
                <input type="button" class="btn btn-default" value="Clear Solution" onclick="$('#textAnswer').val('');" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
